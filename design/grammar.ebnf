(* Groupings *)

<chunk> ::= (<stmt> newlines)*

<block> ::= newlines indentincr <chunk> indentdecr

(* Statements *)

<stmt> ::= "if" <expr> <block> ("else" <block>)? (* if statement (optional else clause *)
         | "(" (<arg> ("," <arg>)*)? ")" ("->" <type>)? <block> (* define function *)
         | <type> <assignment> ("," <assignment>)* (* declare new bindings *)

<arg> ::= <type> identifier

<type> ::= typeidentifier |
           "[" <type> "]" (* array type *)

<assignment> ::= identifier "=" <expr>

(* Expressions *)

<expr> ::= <comparison> (("!="|"==") <comparison>)*

<comparison> ::= <addition> (("<"|">") <addition>)*

<addition> ::= <multiplication> (("+"|"-") <multiplication>)*

<multiplication> ::= <unary> (("*"|"/") <unary>)*

<unary> ::= ("!"|"~") <unary>
          | <primary>

<primary> ::= number | string | character | "true" | "false"
            | "[" (<expr> ("," <expr>)*)? "]"
            | "(" <expr> ")"
            | identifier
